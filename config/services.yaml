# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    weather_api_key: c0e392b3d8cc412a754d135c76354abf

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
   
    serializer_listener.article:
        class : App\Serializer\Listener\ArticleListener
        tags:
            - { name : serializer.event_subscriber }

    app.normalizer.resource_validation_exception:
        class: App\Normalizer\NotFoundHttpExceptionNormalizer
        arguments:
            - { type: 'Symfony\Component\HttpKernel\Exception\NotFoundHttpException' }
        tags:
            - { name: app.normalizer }

    app.exception_subscriber:
        class: App\EventSubscriber\ExceptionListener
        arguments:
        #Eviter de mettre Ã§a avec des accolades au risque symfony le lise comme un tableau
            - '@jms_serializer'
        tags:
            - { name: kernel.event_subscriber }
    
    app.weather:
        class: App\Weather\Weather
        arguments : 
            - '@jms_serializer'
            - '%weather_api_key%'
        public: true
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
